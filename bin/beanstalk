#!/usr/bin/env php
<?php

declare(strict_types=1);

// autoload
$autoloadFiles = [__DIR__ . '/../vendor/autoload.php', __DIR__ . '/../../../autoload.php'];
foreach ($autoloadFiles as $autoloadFile) {
    if (file_exists($autoloadFile)) {
        require_once $autoloadFile;
        break;
    }
}

// use
use Phlib\Beanstalk\Connection\ConnectionInterface;
use Phlib\Beanstalk\Console\ServerStatsCommand;
use Phlib\Beanstalk\Console\ServerTubesCommand;
use Phlib\Beanstalk\Console\JobStatsCommand;
use Phlib\Beanstalk\Console\JobPeekCommand;
use Phlib\Beanstalk\Console\JobDeleteCommand;
use Phlib\Beanstalk\Console\TubePeekCommand;
use Phlib\Beanstalk\Console\TubeKickCommand;
use Phlib\Beanstalk\Console\TubeStatsCommand;
use Phlib\Beanstalk\Factory;
use Phlib\Beanstalk\StatsService;
use Phlib\ConsoleConfiguration\Helper\ConfigurationHelper;
use Symfony\Component\Console\Application;

$factory = new Factory();
$statsServiceFactory = fn (ConnectionInterface $beanstalk) => new StatsService($beanstalk);

// lets go!
$application = new Application('beanstalk');
$application->addCommands([
    new ServerStatsCommand($factory, $statsServiceFactory),
    new ServerTubesCommand($factory, $statsServiceFactory),
    new JobStatsCommand($factory),
    new JobPeekCommand($factory),
    new JobDeleteCommand($factory),
    new TubePeekCommand($factory),
    new TubeKickCommand($factory),
    new TubeStatsCommand($factory, $statsServiceFactory),
]);

ConfigurationHelper::initHelper(
    $application,
    ['host'     => 'localhost'],
    ['filename' => 'beanstalk-config.php']
);

$application->run();
